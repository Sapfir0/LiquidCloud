/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/users/{id}": {
    /** Show a user by ID */
    get: operations["ElCloudWeb.UserController.show"];
    /** Update all attributes of a user */
    put: operations["ElCloudWeb.UserController.update"];
    /** Delete a user by ID */
    delete: operations["ElCloudWeb.UserController.delete"];
  };
  "/api/users": {
    /** List all users in the database */
    get: operations["ElCloudWeb.UserController.index"];
    /** Creates a new user */
    post: operations["ElCloudWeb.UserController.create"];
  };
  "/api/files": {
    /** List all files in directory */
    get: operations["ElCloudWeb.FileStorageController.index"];
    /** List all files in directory */
    put: operations["ElCloudWeb.FileStorageController.update"];
    /** Delete file */
    delete: operations["ElCloudWeb.FileStorageController.delete"];
  };
  "/api/file": {
    /** Download file in directory */
    get: operations["ElCloudWeb.FileController.show"];
  };
}

export interface definitions {
  /** Response schema for multiple users */
  UsersResponse: {
    /** The users details */
    data?: definitions["User"][];
  };
  /** Response schema for single user */
  UserResponse: {
    /** The user details */
    data?: definitions["User"];
  };
  /** POST body for creating a user */
  UserRequest: {
    /** The user details */
    user?: definitions["User"];
  };
  /** A user of the app */
  User: {
    /** User name */
    username: string;
    /** Password */
    password: string;
  };
  /** Response schema for single file */
  FileResponse: {
    /** The file details */
    data?: definitions["File"];
  };
  /** Get list of files in directory */
  File: {
    /** Is folder */
    is_folder: { [key: string]: any };
    /** Filename */
    filename: string;
    /** List of children files */
    children: string;
  };
}

export interface operations {
  /** Show a user by ID */
  "ElCloudWeb.UserController.show": {
    parameters: {
      path: {
        /** User ID */
        id: number;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions["UserResponse"];
      };
    };
  };
  /** Update all attributes of a user */
  "ElCloudWeb.UserController.update": {
    parameters: {
      path: {
        /** User ID */
        id: number;
      };
      body: {
        /** The user details */
        user?: definitions["UserRequest"];
      };
    };
    responses: {
      /** Updated Successfully */
      200: {
        schema: definitions["UserResponse"];
      };
    };
  };
  /** Delete a user by ID */
  "ElCloudWeb.UserController.delete": {
    parameters: {
      path: {
        /** User ID */
        id: number;
      };
    };
    responses: {
      /** No Content - Deleted Successfully */
      203: unknown;
    };
  };
  /** List all users in the database */
  "ElCloudWeb.UserController.index": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        schema: definitions["UsersResponse"];
      };
    };
  };
  /** Creates a new user */
  "ElCloudWeb.UserController.create": {
    parameters: {
      body: {
        /** The user details */
        user?: definitions["UserRequest"];
      };
    };
    responses: {
      /** User created OK */
      201: {
        schema: definitions["UserResponse"];
      };
    };
  };
  /** List all files in directory */
  "ElCloudWeb.FileStorageController.index": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        schema: definitions["FileResponse"];
      };
    };
  };
  /** List all files in directory */
  "ElCloudWeb.FileStorageController.update": {
    parameters: {};
    responses: {};
  };
  /** Delete file */
  "ElCloudWeb.FileStorageController.delete": {
    parameters: {};
    responses: {};
  };
  /** Download file in directory */
  "ElCloudWeb.FileController.show": {
    parameters: {};
    responses: {
      /** OK */
      200: {
        schema: definitions["FileResponse"];
      };
    };
  };
}
